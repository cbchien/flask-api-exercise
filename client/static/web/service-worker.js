"use strict";var precacheConfig=[["/index.html","b90332fcdfc7d52439d8a23e72969db5"],["/static/css/main.1f12f27b.css","04a5635217d39e895ba8ad467b7af2c4"],["/static/fonts/fontawesome-webfont.eot","674f50d287a8c48dc19ba404d20fe713"],["/static/fonts/fontawesome-webfont.svg","912ec66d7572ff821749319396470bde"],["/static/fonts/fontawesome-webfont.ttf","b06871f281fee6b241d60582ae9369b9"],["/static/fonts/fontawesome-webfont.woff","fee66e712a8a08eef5805a46892932ad"],["/static/fonts/ionicons.eot","19e65b89cee273a249fba4c09b951b74"],["/static/fonts/ionicons.svg","28df6ee7b407fd8a14b40bc01f4fd3ae"],["/static/fonts/ionicons.ttf","dd4781d1acc57ba4c4808d1b44301201"],["/static/fonts/ionicons.woff","2c159d0d05473040b53ec79df8797d32"],["/static/js/about.b730a9fc.chunk.js","d79de449deda2fc87def19ad9a48bf39"],["/static/js/home.8695f94e.chunk.js","8c2f8a8a27758fa37888031ad7c0f5f3"],["/static/js/main.44a255d8.js","4e794e24af778ca76d3de36deaca4c04"],["/static/js/outboundOrderList.712c1145.chunk.js","c163bfcd1eb8b2e175d095bfe13c3036"],["/static/js/roleManagement.28aa7717.chunk.js","7610cdb33e0ffc7f54b03da10efdfe1e"],["/static/js/sample.15b6dfed.chunk.js","29ad8e7f314dd4af7f33ff0a7d5e7796"],["/static/js/userManagement.7a5ef7f2.chunk.js","e3ea6d97e316036d2bc6fbd8b0b4e112"],["/static/media/Shopee-700x217.69f2b03c.svg","69f2b03c1d148c7ffd9d46c5559efff6"],["/static/media/Shopee_Logo_white.94c163c2.svg","94c163c2181df9a48bca000d518050f7"],["/static/media/bg.e9389fbb.png","e9389fbb6d2f1c8036db0c30a152a121"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,n,a){var s=new URL(e);return a&&s.pathname.match(a)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return n.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),s=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),s]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,n=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,a),e=urlsToCacheKeys.has(n));var s="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(n=new URL(s,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});